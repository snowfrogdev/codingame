import { PgmImage } from './pgm-image';

describe('Seam Carving', () => {
    test('Height 1 & Width 1, -1', () => {
        const input = 
`P2
1 1
# 0
255
123`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '0'

        expect(actual).toBe(expected)
    })

    test('Height 1 & Width 2, -1', () => {
        const input = 
`P2
2 1
# 1
255
123 82`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '0'

        expect(actual).toBe(expected)
    })

    test('Height 1 & Width 3, -1', () => {
        const input = 
`P2
3 1
# 2
255
123 82 232`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '0'

        expect(actual).toBe(expected)
    })

    test('Height 2 & Width 3, -1', () => {
        const input = 
`P2
3 2
# 2
255
123 82 232
75 36 127`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '0'

        expect(actual).toBe(expected)
    })

    test('Height 3 & Width 3, -1', () => {
        const input = 
`P2
3 3
# 2
255
123 82 232
75 36 127
251 78 32`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '56'

        expect(actual).toBe(expected)
    })

    test('Height 3 & Width 3, -1', () => {
        const input = 
`P2
3 3
# 2
255
123 82 232
84 36 218
251 78 32`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '128'

        expect(actual).toBe(expected)
    })

    test('Height 3 & Width 4, -1', () => {
        const input = 
`P2
4 3
# 3
255
123 201 232 67
84 36 218 42
251 78 32 126`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '59'

        expect(actual).toBe(expected)
    })

    test('Height 3 & Width 5, -1', () => {
        const input = 
`P2
5 3
# 4
255
123 201 232 67 43
84 36 218 42 174
251 78 32 126 132`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '89'

        expect(actual).toBe(expected)
    })

    test('Height 4 & Width 3, -1', () => {
        const input = 
`P2
3 4
# 2
255
123 201 232
84 36 218
251 78 32
89 63 124`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '133'

        expect(actual).toBe(expected)
    })

    test('Height 5 & Width 3, -1', () => {
        const input = 
`P2
3 5
# 2
255
123 201 232
84 36 218
251 78 32
89 63 124
68 206 74`        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '296'

        expect(actual).toBe(expected)
    })

    test('Height 5 & Width 4, -1', () => {
        const input = 
`P2
4 5
# 3
255
123 201 232 67
84 36 218 42
251 78 32 126
89 63 124 22
68 206 74 163`      
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '116'

        expect(actual).toBe(expected)
    })

    test('Height 5 & Width 5, -1', () => {
        const input = 
`P2
5 5
# 4
255
123 201 232 67 43
84 36 218 42 174
251 78 32 126 132
89 63 124 22 231
68 206 74 163 91`      
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '187'

        expect(actual).toBe(expected)
    })

    test('Height 8 & Width -1', () => {
        const input = 
`P2
30 8
# 29
255
164 174 175 173 176 171 171 169 165 162 164 166 165 162 168 169 163 174 207 173 187 196 183 177 178 164 158 162 168 185
179 130 118 108 117 136 148 165 165 162 155 156 157 155 156 162 170 161 134 100 109 111 117 132 140 154 151 139 125 136
93 74 102 87 73 98 98 92 96 137 146 138 136 134 132 131 133 128 91 110 112 104 78 77 86 103 122 147 150 146
129 140 152 125 59 62 82 76 54 107 156 145 139 141 145 142 138 138 141 144 146 149 90 64 84 93 70 92 177 174
167 159 160 133 101 83 86 59 29 67 167 171 169 155 147 142 136 129 129 126 141 113 90 74 54 71 46 51 163 189
192 198 157 160 170 134 195 114 156 109 114 197 200 199 193 183 179 168 156 163 127 126 161 122 103 131 75 88 96 183
190 198 153 170 173 138 129 150 191 197 118 167 202 202 204 194 187 185 184 142 132 172 171 150 125 161 135 190 145 132
188 188 175 173 154 142 141 170 161 154 116 134 154 160 176 192 188 184 185 159 161 158 162 128 118 121 147 159 171 111`
        
        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '175'

        expect(actual).toBe(expected)

    })

    test('Height 11 & Width -1', () => {
        const input =
`P2
27 11
# 26
255
66 68 61 63 64 63 63 76 71 71 81 72 78 72 77 86 84 74 79 69 65 67 77 80 75 75 77
49 62 61 52 59 72 74 78 77 74 74 70 77 81 72 76 92 80 65 64 77 89 87 75 66 76 67
56 57 55 57 57 56 59 78 74 75 70 59 74 79 64 58 73 77 78 69 73 80 70 74 70 59 64
70 94 104 105 82 82 48 48 80 67 61 68 69 75 57 69 80 65 83 71 87 87 85 101 114 110 83
87 143 137 162 167 158 110 72 80 79 59 47 67 80 62 70 105 73 90 90 138 145 142 168 166 149 85
63 146 137 104 146 161 134 120 138 151 140 56 74 72 65 70 155 164 149 156 171 175 165 148 171 125 74
100 131 114 60 57 89 137 92 73 99 148 82 77 72 63 83 140 97 98 98 142 114 127 53 91 140 78
110 77 99 62 68 82 103 96 69 63 84 90 81 86 84 88 88 65 69 80 112 69 117 64 62 78 116
90 44 94 65 68 69 100 96 60 61 71 70 84 75 72 65 60 70 63 88 86 60 99 67 57 60 131
66 46 73 73 61 71 100 85 52 55 64 56 55 59 61 80 79 66 56 88 69 60 96 64 54 69 93
59 52 63 69 61 48 60 55 52 65 78 81 81 78 90 87 78 71 70 71 66 68 73 66 67 82 63`

        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = '120'

        expect(actual).toBe(expected)

    })

    test('Height 16 & Width -2', () => {
        const input =
`P2
31 16
# 29
255
226 227 226 228 216 200 197 178 177 187 186 127 128 102 89 145 166 123 147 161 151 113 92 89 114 148 126 81 100 141 179
229 229 229 231 222 219 227 225 215 209 197 140 101 92 70 90 122 156 164 113 110 94 104 118 103 81 92 92 116 143 190
237 232 233 233 236 238 240 244 246 244 248 224 198 109 56 112 139 215 231 137 134 106 124 113 90 87 86 127 197 217 230
243 242 245 246 244 243 244 244 243 243 244 215 200 116 63 150 206 255 230 167 135 139 94 121 193 133 152 221 242 240 236
243 243 245 247 247 246 246 247 245 246 248 209 206 184 65 130 197 232 234 102 132 218 171 171 210 210 192 237 236 236 235
240 239 242 244 244 241 241 244 244 242 241 226 246 219 59 101 219 240 241 203 207 248 244 235 247 247 240 236 239 241 242
243 239 236 236 246 250 248 247 245 236 233 231 237 204 78 78 165 239 231 240 242 238 242 247 243 241 239 237 239 239 238
246 250 245 244 196 165 182 194 206 235 237 243 244 208 56 75 132 231 231 230 231 234 236 237 239 240 239 237 239 240 242
240 208 231 157 58 72 99 118 131 100 102 146 226 223 66 90 134 222 236 232 232 232 233 235 234 235 234 234 237 239 242
200 42 72 71 61 96 76 81 90 62 65 67 131 248 95 94 143 220 238 231 229 233 233 231 243 246 249 250 248 248 243
115 4 15 27 48 56 33 48 60 57 43 37 83 223 116 56 134 193 208 197 210 226 214 160 167 177 187 185 187 205 236
38 14 23 22 39 33 28 34 27 23 24 25 70 185 104 74 135 178 187 192 187 134 106 83 93 83 101 80 101 141 196
68 5 38 32 18 16 22 15 14 9 67 90 46 159 119 132 155 174 173 186 106 43 59 101 79 61 88 67 95 158 187
158 83 152 93 15 16 36 45 26 24 112 202 83 124 175 173 177 173 183 176 105 123 143 110 89 118 118 136 120 138 170
154 164 182 114 52 63 96 172 161 121 135 179 150 130 170 173 178 178 183 187 188 186 172 158 141 190 196 195 160 175 178
183 174 174 160 139 150 181 185 190 185 188 183 185 182 190 185 189 192 194 193 194 188 188 190 191 190 189 188 193 190 192`

        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = 
`270
441`

        expect(actual).toBe(expected)

    })

    test('Height 19 & Width -3', () => {
        const input =
`P2
40 19
# 37
255
240 241 242 242 243 243 244 244 244 244 245 246 246 246 246 246 246 247 247 247 248 248 248 248 248 248 247 255 237 223 251 246 247 247 247 246 246 246 246 245
240 241 241 242 242 243 243 243 244 244 244 245 245 246 246 246 246 246 247 247 247 247 247 248 247 250 232 219 142 218 253 246 247 247 246 246 246 245 245 245
240 241 241 242 242 242 243 243 243 244 244 245 245 245 245 246 246 246 247 247 247 247 247 246 254 217 141 112 115 241 249 246 247 246 246 246 245 245 244 244
240 241 241 241 242 242 242 243 243 243 244 244 244 245 245 245 245 246 246 246 247 246 244 249 240 125 126 114 151 255 245 246 246 246 246 245 245 244 244 244
240 240 241 241 241 242 242 242 243 243 244 244 244 244 245 245 245 245 246 246 246 251 255 255 157 130 151 90 174 255 244 246 246 245 245 245 245 244 244 244
239 240 240 241 241 242 242 242 242 243 243 243 244 244 244 245 245 245 245 244 253 181 112 166 154 170 119 71 222 251 245 246 245 245 245 245 245 244 244 243
239 240 240 240 241 241 242 242 242 242 243 243 243 244 244 244 244 244 245 244 248 219 65 86 193 185 81 117 255 245 246 246 245 244 245 244 244 243 243 243
239 240 240 240 240 241 241 242 242 242 243 241 242 243 243 244 244 244 244 245 242 255 136 124 181 174 54 194 242 236 247 245 245 244 244 244 244 243 243 243
238 239 240 240 240 240 241 241 241 241 242 253 250 242 243 243 243 242 244 244 243 251 208 132 155 89 114 144 57 154 255 242 244 244 244 241 242 243 243 242
238 239 237 238 240 240 240 241 241 241 247 166 193 250 241 243 243 250 245 244 244 243 252 206 138 159 159 46 32 126 255 241 244 243 243 252 249 241 242 242
236 240 250 240 239 240 240 240 239 249 209 52 160 251 241 243 243 215 238 244 243 243 244 242 165 114 67 68 35 175 254 240 243 243 242 194 211 247 240 241
245 238 131 220 246 238 239 239 237 255 144 32 208 251 237 253 198 39 209 252 241 243 244 236 231 127 47 61 64 240 247 244 241 247 222 94 102 222 243 239
214 112 46 124 241 238 238 238 242 224 155 130 173 242 239 251 147 40 139 251 240 242 242 240 255 127 35 35 183 136 145 244 244 240 245 195 194 207 222 242
116 76 102 69 217 242 236 236 243 197 177 204 171 227 248 216 96 94 71 220 246 240 241 240 248 178 104 193 240 116 105 144 238 241 244 209 154 130 133 229
103 63 82 74 222 239 235 235 243 171 99 106 90 217 249 215 87 56 63 229 242 239 240 240 239 248 255 252 231 111 68 68 144 251 238 229 120 91 101 189
186 78 76 100 241 233 234 233 241 193 67 37 86 229 244 224 82 56 169 251 235 238 238 238 238 236 235 235 247 189 109 99 108 226 237 247 190 97 60 154
237 122 67 143 241 232 235 235 236 235 125 32 117 231 244 171 60 121 201 238 238 239 239 240 240 241 240 239 240 222 127 141 186 215 237 234 195 177 78 56
195 85 26 126 185 194 203 208 204 201 161 42 72 186 195 192 186 167 170 194 204 207 209 210 210 209 210 209 207 191 174 180 195 200 198 195 182 172 161 150
144 114 97 125 142 141 144 146 145 153 139 33 51 149 153 152 152 154 154 151 152 153 155 155 158 154 156 155 158 162 161 157 152 152 155 153 157 156 159 163`

        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = 
`137
141
148`

        expect(actual).toBe(expected)

    })

    test('Height 35 & Width -10', () => {
        const input =
`P2
88 35
# 78
255
71 83 69 56 79 83 79 80 63 80 73 83 78 62 72 73 75 79 92 83 66 71 93 106 89 84 73 79 63 61 69 59 57 78 75 82 51 59 56 63 73 75 59 61 65 68 72 78 90 90 79 75 64 91 92 74 77 80 73 92 107 96 71 50 68 73 57 60 50 54 66 73 79 69 79 80 75 86 79 76 83 69 65 76 61 64 67 72
86 84 74 62 64 74 76 63 54 64 66 61 41 51 46 47 42 47 70 63 56 56 64 73 73 64 61 68 62 60 71 60 73 84 93 99 68 61 65 90 89 86 80 81 74 70 85 89 76 88 91 90 77 86 82 70 75 70 69 77 76 88 80 64 80 80 74 71 60 58 68 74 71 71 85 86 88 95 81 77 72 72 80 80 80 95 83 85
51 54 57 54 62 70 50 40 47 42 50 51 54 82 79 63 56 58 61 58 48 45 58 57 75 84 70 79 89 81 73 77 99 90 76 87 84 71 82 103 82 67 76 87 75 74 84 81 60 80 97 87 85 99 94 80 74 63 67 71 67 69 63 53 61 55 63 69 71 70 78 81 67 68 77 84 71 76 80 81 69 75 69 82 79 77 82 65
48 46 57 62 64 74 52 52 57 60 64 56 60 65 82 77 69 64 65 72 59 62 89 80 83 77 74 81 77 67 86 78 69 67 62 74 66 65 76 78 71 66 76 61 59 71 75 60 58 72 91 89 107 88 67 82 92 92 84 71 79 70 65 68 72 54 66 91 73 69 80 83 103 90 71 77 75 59 58 64 68 69 69 77 71 72 70 59
40 35 38 68 70 80 70 68 82 70 54 57 56 48 64 67 60 65 74 67 64 77 87 76 67 72 55 68 77 71 80 69 72 77 67 64 72 81 52 76 74 88 92 80 87 80 92 68 104 58 71 95 104 96 63 78 84 79 70 59 59 55 56 65 75 81 90 76 81 73 83 94 84 80 76 84 87 55 58 71 69 88 89 78 70 74 59 68
50 49 48 56 48 53 69 52 65 65 45 51 55 52 58 69 69 83 93 77 61 80 88 70 82 90 73 72 86 70 64 62 77 74 89 70 85 93 55 72 76 91 91 77 83 81 92 66 66 70 45 75 84 97 79 101 83 70 65 67 58 72 68 65 69 68 77 84 89 110 92 93 86 82 87 80 85 73 73 78 64 55 78 79 71 63 63 60
56 57 69 56 52 66 52 51 45 44 45 42 40 36 38 45 66 87 90 85 75 78 71 76 83 94 84 83 95 76 70 73 83 68 78 53 64 75 38 76 79 72 65 74 84 68 73 64 54 65 53 65 92 89 90 98 88 84 81 79 77 78 70 65 62 71 80 84 71 86 91 93 81 83 91 89 84 76 66 77 59 57 75 75 52 57 79 64
56 57 77 62 60 68 57 68 60 62 62 63 62 58 50 33 30 38 48 59 63 70 77 77 87 79 91 76 59 76 63 69 80 83 62 36 51 59 31 83 73 79 77 83 88 70 60 71 62 71 70 65 99 77 67 83 73 67 66 78 74 73 67 67 59 58 65 72 86 85 89 86 75 61 65 62 63 73 73 60 53 60 66 66 60 59 76 77
57 56 62 65 55 53 60 67 66 62 66 71 74 75 75 67 55 44 40 42 41 44 73 73 72 65 64 65 56 62 66 75 89 77 69 44 86 81 38 79 87 83 87 86 85 74 64 59 57 47 63 59 66 60 53 78 71 73 97 86 89 82 63 72 63 64 78 82 75 78 70 67 65 52 52 61 71 75 78 71 70 62 62 59 65 67 63 76
50 47 49 64 61 63 65 61 56 56 65 73 78 79 78 74 75 72 58 61 48 26 34 64 55 66 71 75 86 83 69 86 73 70 68 44 71 79 49 83 60 63 68 71 60 61 71 49 54 40 58 59 46 52 79 73 66 70 74 73 57 78 79 73 68 79 80 77 73 64 64 63 66 74 79 87 89 87 95 97 94 83 71 66 67 63 56 64
57 55 62 66 76 79 83 86 73 70 80 69 69 73 77 76 82 82 73 70 64 40 27 38 74 90 88 77 81 86 74 70 67 61 66 58 64 77 63 65 61 67 84 61 62 86 92 70 50 65 74 71 88 88 84 66 70 65 65 83 76 103 101 85 79 92 81 90 89 80 82 85 90 92 96 101 101 96 103 107 103 105 98 91 77 69 76 53
54 64 96 73 79 104 129 135 130 101 126 143 112 76 65 69 89 101 90 80 76 57 32 29 50 83 77 70 101 86 67 72 64 76 83 54 91 89 64 64 69 77 98 73 64 60 77 64 40 75 68 94 105 102 76 68 90 79 74 105 86 78 62 55 52 68 86 104 103 104 100 100 97 100 102 101 98 96 107 111 109 114 116 105 116 154 75 58
63 79 130 142 101 113 149 148 139 123 117 174 170 141 103 76 79 104 105 96 83 69 48 26 48 64 69 83 80 60 54 62 33 64 70 47 50 67 68 50 64 84 91 91 76 55 63 41 37 69 62 84 97 83 49 75 44 38 81 97 86 71 69 71 63 84 113 109 115 119 109 101 96 98 95 91 103 128 141 149 141 134 123 123 177 151 28 74
64 72 118 156 164 130 125 134 132 138 131 155 158 159 157 139 134 142 149 125 99 78 66 30 44 65 63 70 59 54 50 80 19 28 50 45 30 61 70 46 61 60 74 76 76 69 70 42 42 74 65 99 95 124 139 77 14 66 85 86 81 89 89 77 79 112 118 119 126 125 105 94 94 112 137 150 171 186 180 177 164 154 140 166 190 73 63 78
43 53 114 113 156 164 120 125 130 143 151 149 151 134 150 164 170 186 177 148 132 119 99 46 51 95 80 66 66 49 76 165 98 41 54 54 34 40 59 34 63 77 73 68 79 99 85 66 29 68 60 64 93 132 114 63 66 84 95 98 86 95 94 81 102 121 132 149 163 158 138 121 143 177 187 193 153 135 180 168 161 147 154 193 120 63 72 74
54 53 94 148 112 145 143 136 140 136 142 167 214 173 160 170 182 176 141 143 163 149 127 80 89 125 114 104 94 91 80 93 170 82 56 68 56 43 47 72 93 78 60 71 90 76 81 83 52 56 64 63 101 131 81 83 104 93 99 92 91 99 113 102 121 142 151 171 187 190 180 161 175 173 177 176 153 149 176 158 154 146 165 162 66 68 79 92
59 67 62 138 169 122 127 137 150 137 133 84 194 222 225 228 205 163 139 139 142 145 132 108 120 140 144 145 128 125 123 113 139 145 100 77 50 31 49 86 73 76 63 74 71 90 68 77 69 59 64 96 151 137 153 156 140 132 131 125 127 131 140 123 142 171 181 165 162 178 179 165 156 150 157 150 164 192 184 170 165 156 161 118 70 51 129 91
45 60 57 90 187 170 128 129 155 124 123 81 84 112 132 158 212 203 160 160 144 101 104 142 150 150 152 158 147 145 153 147 146 165 157 139 77 38 56 76 76 74 64 50 58 82 71 61 61 42 72 95 145 161 173 182 164 166 157 150 152 156 163 153 149 172 172 153 161 179 172 160 167 151 171 187 204 189 173 177 170 163 149 120 42 87 124 66
47 61 64 106 164 172 155 121 155 119 71 69 75 83 75 68 83 125 155 169 159 122 52 93 124 126 133 142 145 143 147 151 178 161 176 84 52 65 58 84 79 65 71 73 86 60 56 54 57 55 80 43 126 162 161 184 181 168 165 164 168 165 169 172 155 155 166 172 168 172 147 169 198 175 167 153 119 93 90 171 185 175 150 117 69 93 95 71
67 78 86 129 171 156 132 122 148 108 39 50 53 88 86 79 72 67 58 150 161 157 125 54 63 72 73 85 96 103 117 166 193 161 161 140 61 58 80 82 76 86 90 76 83 69 53 69 79 70 71 90 151 155 169 170 171 150 145 147 149 153 153 149 129 142 171 181 184 120 114 140 154 108 52 50 37 53 48 86 167 190 151 124 111 56 63 50
79 84 105 147 177 103 78 118 145 99 35 46 66 74 78 70 52 72 83 147 155 124 162 136 83 75 74 67 79 76 82 82 123 174 164 145 65 57 90 65 74 80 66 68 78 64 58 65 75 85 69 72 123 156 177 92 53 58 73 62 69 90 79 78 83 75 143 188 166 70 54 102 207 134 75 71 51 61 54 74 86 154 166 120 135 72 49 53
80 102 124 176 116 56 96 123 141 82 48 60 53 67 71 70 62 76 103 134 161 83 100 151 129 69 77 74 66 69 82 60 53 109 184 154 88 59 72 88 75 65 77 69 71 54 48 75 73 76 78 81 122 164 124 62 60 73 72 70 69 88 83 78 87 74 155 181 115 68 71 120 197 130 83 88 82 67 68 74 72 74 160 140 124 139 77 51
49 93 163 129 71 71 110 132 122 94 74 75 69 61 64 74 70 75 81 118 167 75 54 103 144 79 70 57 50 60 65 71 72 69 116 155 129 62 66 89 81 100 83 72 90 65 73 86 73 71 80 81 139 131 69 67 64 77 69 77 70 65 65 63 66 100 174 136 51 61 71 109 189 118 62 58 74 74 76 62 66 55 72 141 119 140 135 62
62 128 135 73 79 63 102 128 100 81 86 74 78 72 69 61 72 74 65 106 169 78 67 107 126 53 60 70 70 78 80 84 75 87 86 81 148 88 56 94 98 104 85 83 100 85 92 111 78 83 86 81 132 79 77 79 70 72 72 81 61 70 65 68 82 139 176 91 43 60 55 90 185 132 60 60 49 71 73 68 67 72 62 71 123 109 133 51
123 152 80 76 68 59 84 124 97 54 66 55 53 67 82 68 80 70 67 74 155 86 56 104 125 71 84 80 68 72 61 65 95 85 68 63 100 100 77 84 80 64 70 83 91 102 82 79 72 85 78 83 118 79 71 81 77 67 72 97 97 68 68 61 95 172 142 66 51 62 55 75 183 125 47 62 65 59 74 82 59 65 70 46 72 135 120 98
137 125 63 55 52 41 59 125 126 46 37 40 45 52 69 65 71 60 66 61 150 88 60 117 127 77 96 70 61 65 64 65 60 67 76 60 49 66 84 80 86 72 70 73 80 88 87 62 68 100 88 66 73 80 76 81 58 70 80 86 84 62 77 58 91 176 89 61 77 80 62 59 152 116 58 79 71 68 65 60 51 55 60 47 57 148 148 123
137 104 44 39 55 53 43 90 148 67 40 39 56 80 75 75 80 77 65 61 142 104 62 123 119 66 72 59 65 64 58 54 60 56 84 73 74 76 59 83 93 108 95 79 72 81 106 70 82 74 68 44 66 67 52 65 74 63 71 86 76 62 72 67 114 145 66 66 66 73 60 45 128 125 68 82 76 80 60 50 42 56 61 48 41 143 160 102
141 85 45 60 65 51 38 52 139 109 69 73 58 82 74 83 64 65 61 56 143 105 43 122 116 62 58 47 58 53 45 51 70 63 55 73 63 76 69 73 81 94 89 81 75 66 66 75 78 76 62 58 49 42 57 89 71 47 51 74 64 56 50 62 136 120 60 74 55 48 67 67 117 134 49 50 70 73 50 47 48 62 61 43 62 154 157 96
141 73 56 59 53 58 48 52 113 145 91 68 53 58 65 62 56 96 61 39 126 116 68 148 101 49 60 49 60 42 44 72 85 76 82 100 75 66 63 69 80 72 72 66 59 56 55 62 58 64 61 75 47 45 97 79 49 60 60 71 52 53 51 48 137 98 72 63 50 52 54 55 101 131 61 53 61 75 63 54 73 56 59 62 90 141 148 102
136 71 55 35 41 54 58 75 69 136 113 48 58 70 66 63 59 81 64 54 120 126 85 138 82 63 62 64 64 53 57 75 89 66 62 80 70 51 59 70 61 57 48 53 41 45 48 44 43 76 82 59 80 80 68 49 67 76 57 61 47 51 52 67 145 68 62 52 50 49 65 86 89 140 86 85 61 72 56 64 68 61 64 63 106 142 124 88
82 56 59 41 38 47 59 66 57 63 69 65 46 48 57 61 74 97 72 69 123 123 57 127 84 54 65 63 68 48 43 55 62 47 48 61 49 41 47 58 58 46 39 60 61 48 50 50 74 88 100 61 85 70 60 72 72 55 51 62 50 72 59 100 135 65 71 62 61 59 60 81 76 144 69 66 59 56 49 59 44 70 60 51 86 90 112 79
41 54 58 50 47 47 62 56 55 36 43 100 44 47 51 77 91 81 54 52 82 127 57 121 64 43 67 49 57 47 57 48 43 46 49 69 44 50 38 45 40 53 69 68 89 86 76 85 95 85 85 103 109 100 97 73 77 52 63 73 66 73 74 129 99 60 79 67 65 64 57 62 59 122 87 62 53 59 57 55 43 50 49 57 70 34 30 52
83 46 74 48 47 40 75 68 58 47 76 115 71 55 68 72 65 58 29 29 36 109 96 31 50 72 54 37 41 57 50 59 47 68 77 71 78 91 56 71 71 80 77 87 86 82 79 96 79 84 73 88 111 94 86 85 87 89 74 69 86 58 61 95 57 55 63 53 72 72 71 80 61 96 75 81 64 63 61 63 69 71 60 74 107 71 59 49
99 73 46 29 47 59 74 67 68 72 77 91 89 45 55 48 49 45 38 39 40 57 69 51 49 45 33 52 64 68 76 79 61 94 92 85 85 93 87 106 106 81 80 75 72 84 89 93 105 84 87 79 76 73 60 69 65 78 76 57 80 60 66 74 49 56 61 61 77 65 76 71 60 70 67 63 60 58 75 64 74 84 89 93 93 85 61 65
82 73 36 40 60 62 62 67 64 72 61 58 46 61 65 54 57 48 55 51 54 55 49 62 50 49 48 51 74 53 84 79 81 105 91 100 99 78 87 121 90 85 86 66 63 71 85 86 90 91 76 67 68 53 51 64 63 72 53 53 72 81 52 72 77 84 76 63 69 62 55 58 71 69 76 75 64 60 84 69 70 98 96 79 89 96 56 62`

        const image = new PgmImage(input)

        const actual = image.removeSeams()

        const expected = 
`489
429
506
545
547
574
519
580
599
618`

        expect(actual).toBe(expected)

    })
})


